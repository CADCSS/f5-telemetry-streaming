image: node:8

stages:
- build
- test
- review

build package:
  image: f5devcentral/containthedocs:rpmbuild
  stage: build
  script:
    - echo 'CI BUILD'
    # install packages first
    - npm install --production
    - bash ./scripts/build_rpm.sh
  tags:
    - cm-official-docker-executor
  artifacts:
    name: f5-telemetry-$CI_BUILD_REF
    paths:
        - dist
    expire_in: 1 month

build docs:
    image: quay.pdsea.f5net.com/doc-ops/containthedocs:710e05a8ed
    stage: build
    script:
        - make html
        - vale --glob='*.{md,rst}' .
      #  - make linkcheck
    tags:
        - docker-executor
    artifacts:
        paths:
            - docs/_build/html
        expire_in: 1 month

test package:
    stage: test
    script:
        - npm install
        - npm run lint
        - npm run test
    tags:
        - cm-official-docker-executor

test functional:
    stage: test
    #dependencies:
    #    - build package
    script:
        - npm install
        - ls ./dist -ls
        - npm run test-functional
    tags:
        - cm-official-docker-executor
    only:
        # run if scheduled
        - schedules
        # run for specific branches
        - develop
        - master
        - /.*functional/

pages:
    image: quay.pdsea.f5net.com/doc-ops/containthedocs:710e05a8ed
    stage: review
    environment:
        name: staging
        url: https://${CI_PROJECT_NAMESPACE}.pages.gitswarm.f5net.com/${CI_PROJECT_NAME}
    tags:
        - cm-official-docker-executor
    dependencies:
        - build docs
    script:
        - mkdir -p ./public
        - cp -R docs/_build/html/* ./public
    artifacts:
        paths:
            - public
    only:
        - develop@cloudsolutions/f5-telemetry
        - docs-vanessa@cloudsolutions/f5-telemetry

Publish docs to staging:
  image: quay.pdsea.f5net.com/doc-ops/containthedocs:710e05a8ed
  stage: review
  environment: 
    name: staging
    url: https://clouddocs.f5networks.net/products/extensions/telemetry-streaming/latest
  tags:
    - cm-official-docker-executor
  only:
    - docs-staging@cloudsolutions/f5-telemetry-streaming
  dependencies:
    - build docs
  script:
    - aws s3 sync docs/_build/html s3://clouddocs.f5networks.net/products/extensions/telemetry-streaming/latest
    # - aws s3 cp versions.json s3://clouddocs.f5networks.net/products/extensions/telemetry-streaming/versions.json
    # create invalidation to clear cloudfront cache
    - aws cloudfront create-invalidation --distribution-id $AWS_DIST --paths /products/extensions/telemetry-streaming/latest

# Publish docs to clouddocs.f5.com
docs to production:
  image: quay.pdsea.f5net.com/doc-ops/containthedocs:710e05a8ed
  stage: review
  environment:
    name: production
    url: https://clouddocs.f5.com/products/extensions/telemetry-streaming/latest
  only:
  # Currently will only deploy to clouddocs.f5.com on commits to doc-publish
  # fill in desired release branch name and uncomment to add deployment from a branch
  - docs-publish@cloudsolutions/f5-telemetry-streaming
  tags:
  - cm-official-docker-executor
  dependencies:
  - build docs
  script:
  # Uncomment and set to create desired version format
    - aws s3 sync docs/_build/html s3://clouddocs.f5.com/products/extensions/telemetry-streaming/latest
    # - aws s3 cp versions.json s3://clouddocs.f5.com/products/extensions/telemetry-streaming/versions.json
    # create invalidation to clear cloudfront cache
    - aws cloudfront create-invalidation --distribution-id $AWS_DIST --paths /products/extensions/telemetry-streaming/latest

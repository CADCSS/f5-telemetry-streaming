{
    "$id": "consumer_schema.json",
    "$async": true,
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Telemetry streaming consumer schema",
    "description": "",
    "type": "object",
    "definitions": {
        "host": {
            "$comment": "Required for certain consumers: standard property",
            "title": "Host",
            "description": "FQDN or IP address" ,
            "type": "string",
            "anyOf": [
                { "format": "ipv4" },
                { "format": "ipv6" },
                { "format": "hostname" }
            ],
            "hostNetworkCheck": true         
        },
        "protocol": {
            "$comment": "Required for certain consumers: standard property",
            "title": "Protocol",
            "description": "" ,
            "type": "string",
            "enum": [ "http", "https" ]
        },
        "port": {
            "$comment": "Required for certain consumers: standard property",
            "title": "Port",
            "description": "" ,
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
        },
        "path": {
            "$comment": "Required for certain consumers: standard property",
            "title": "Path",
            "description": "Path to post data to" ,
            "type": "string"
        },
        "allowSelfSignedCert": {
            "$comment": "Required for certain consumers: standard property",
            "title": "Allow Self-Signed Certificate",
            "description": "" ,
            "type": "boolean",
            "default": false
        },
        "format": {
            "$comment": "Required for certain consumers: standard property",
            "title": "Format (informs consumer additional formatting may be required)",
            "description": "",
            "type": "string",
            "enum": [
                "default",
                "f5dashboard"
            ]
        },
        "username": {
            "$comment": "Required for certain consumers: standard property",
            "title": "Username",
            "description": "" ,
            "type": "string"
        },
        "region": {
            "$comment": "Required for certain consumers: AWS_CloudWatch, AWS_S3",
            "title": "Region",
            "description": "" ,
            "type": "string"
        },
        "bucket": {
            "$comment": "Required for certain consumers: AWS_S3",
            "title": "Bucket",
            "description": "" ,
            "type": "string"
        },
        "logGroup": {
            "$comment": "Required for certain consumers: AWS_CloudWatch",
            "title": "Log Group",
            "description": "" ,
            "type": "string"
        },
        "logStream": {
            "$comment": "Required for certain consumers: AWS_CloudWatch",
            "title": "Log Stream",
            "description": "" ,
            "type": "string"
        },
        "workspaceId": {
            "$comment": "Required for certain consumers: Azure_Log_Analytics",
            "title": "Workspace ID",
            "description": "" ,
            "type": "string"
        },
        "topic": {
            "$comment": "Required for certain consumers: Kafka",
            "title": "Topic",
            "description": "" ,
            "type": "string"
        },
        "index": {
            "$comment": "Required for certain consumers: ElasticSearch",
            "title": "Index Name",
            "description": "" ,
            "type": "string"
        },
        "apiVersion": {
            "$comment": "Required for certain consumers: ElasticSearch",
            "title": "API Version",
            "description": "" ,
            "type": "string"
        },
        "dataType": {
            "$comment": "Required for certain consumers: ElasticSearch",
            "title": "Index/Data type",
            "description": "" ,
            "type": "string"
        }
    },
    "allOf": [
        {
            "if": { "properties": { "class": { "const": "Telemetry_Consumer" } } },
            "then": {
                "required": [
                    "class",
                    "type"
                ],
                "properties": {
                   "class": {
                       "title": "Class",
                       "description": "Telemetry streaming consumer class",
                       "type": "string",
                       "enum": [ "Telemetry_Consumer" ]
                   },
                   "enable": {
                        "title": "Enable",
                        "description": "" ,
                        "type": "boolean",
                        "default": true
                    },
                    "trace": {
                        "title": "Trace",
                        "description": "Enables data dumping to file. Value could be string - path to file to dump data to." ,
                        "type": ["boolean", "string"],
                        "default": false
                    },
                    "type": {
                        "title": "Type",
                        "description": "" ,
                        "type": "string",
                        "enum": [ "default", "Splunk", "Azure_Log_Analytics", "AWS_CloudWatch", "AWS_S3", "Graphite", "Kafka", "ElasticSearch", "Sumo_Logic" ]
                    },
                    "enableHostReachableCheck": { "$ref": "base_schema.json#/definitions/enableHostReachableCheck" }
                },
                "allOf": [
                    {
                        "if": { "properties": { "type": { "const": "default" } } },
                        "then": {
                            "required": [],
                            "properties": {}
                        },
                        "else": {}
                    },
                    {
                        "if": { "properties": { "type": { "const": "Splunk" } } },
                        "then": {
                            "required": [
                                "host",
                                "passphrase"
                            ],
                            "properties": {
                                "host": { "$ref": "#/definitions/host" },
                                "protocol": { "$ref": "#/definitions/protocol", "default": "http" },
                                "port": { "$ref": "#/definitions/port", "default": 8088 },
                                "passphrase": { "$ref": "base_schema.json#/definitions/secret" },
                                "format": { "$ref": "#/definitions/format", "default": "default"  }
                            }
                        },
                        "else": {}
                    },
                    {
                        "if": { "properties": { "type": { "const": "Azure_Log_Analytics" } } },
                        "then": {
                            "required": [
                                "workspaceId",
                                "passphrase"
                            ],
                            "properties": {
                                "workspaceId": { "$ref": "#/definitions/workspaceId" },
                                "passphrase": { "$ref": "base_schema.json#/definitions/secret" }
                            }
                        },
                        "else": {}
                    },
                    {
                        "if": { "properties": { "type": { "const": "AWS_CloudWatch" } } },
                        "then": {
                            "required": [
                                "region",
                                "logGroup",
                                "logStream",
                                "username",
                                "passphrase"
                            ],
                            "properties": {
                                "region": { "$ref": "#/definitions/region" },
                                "logGroup": { "$ref": "#/definitions/logGroup" },
                                "logStream": { "$ref": "#/definitions/logStream" },
                                "username": { "$ref": "#/definitions/username" },
                                "passphrase": { "$ref": "base_schema.json#/definitions/secret" }
                            }
                        },
                        "else": {}
                    },
                    {
                        "if": { "properties": { "type": { "const": "AWS_S3" } } },
                        "then": {
                            "required": [
                                "region",
                                "bucket",
                                "username",
                                "passphrase"
                            ],
                            "properties": {
                                "region": { "$ref": "#/definitions/region" },
                                "bucket": { "$ref": "#/definitions/bucket" },
                                "username": { "$ref": "#/definitions/username" },
                                "passphrase": { "$ref": "base_schema.json#/definitions/secret" }
                            }
                        },
                        "else": {}
                    },
                    {
                        "if": { "properties": { "type": { "const": "Graphite" } } },
                        "then": {
                            "required": [
                                "host"
                            ],
                            "properties": {
                                "host": { "$ref": "#/definitions/host" },
                                "protocol": { "$ref": "#/definitions/protocol", "default": "http" },
                                "port": { "$ref": "#/definitions/port", "default": 80 }
                            }
                        },
                        "else": {}
                    },
                    {
                        "if": { "properties": { "type": { "const": "Kafka" } } },
                        "then": {
                            "required": [
                                "host",
                                "topic"
                            ],
                            "properties": {
                                "host": { "$ref": "#/definitions/host" },
                                "port": { "$ref": "#/definitions/port", "default": 9092 },
                                "topic": { "$ref": "#/definitions/topic" } 
                            }
                        },
                        "else": {}
                    },
                    {
                        "if": { "properties": { "type": { "const": "ElasticSearch" } } },
                        "then": {
                            "required": [
                                "host",
                                "index"
                            ],
                            "properties": {
                                "host": { "$ref": "#/definitions/host" },
                                "path": { "$ref": "#/definitions/path" },
                                "port": { "$ref": "#/definitions/port", "default": 9200 },
                                "protocol": { "$ref": "#/definitions/protocol", "default": "http" },
                                "allowSelfSignedCert": { "$ref": "#/definitions/allowSelfSignedCert" },
                                "username": { "$ref": "#/definitions/username" },
                                "passphrase": { "$ref": "base_schema.json#/definitions/secret" },
                                "apiVersion": { "$ref": "#/definitions/apiVersion"},
                                "index": { "$ref": "#/definitions/index" },
                                "dataType": { "$ref": "#/definitions/dataType", "default": "f5.telemetry" }
                            }
                        },
                        "else": {}
                    },
                    {
                        "if": { "properties": { "type": { "const": "Sumo_Logic" } } },
                        "then": {
                            "required": [
                                "host",
                                "passphrase"
                            ],
                            "properties": {
                                "host": { "$ref": "#/definitions/host" },
                                "protocol": { "$ref": "#/definitions/protocol", "default": "https" },
                                "port": { "$ref": "#/definitions/port", "default": 443 },
                                "path": { "$ref": "#/definitions/path", "default": "/receiver/v1/http/" },
                                "passphrase": { "$ref": "base_schema.json#/definitions/secret" }
                            }
                        },
                        "else": {}
                    }
                ]
            },
            "else": {}
        }
    ]
}
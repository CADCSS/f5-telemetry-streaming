{
    "stats": {
        "hostname": {
            "key": "/mgmt/tm/sys/global-settings::hostname",
            "normalize": null,
            "convertArrayToMap": null,
            "filterKeys": null,
            "renameKeys": null,
            "runFunction": null
        },
        "version": {
            "key": "/mgmt/tm/sys/version::sys/version/0::Version"
        },
        "versionBuild": {
            "key": "/mgmt/tm/sys/version::sys/version/0::Build"
        },
        "location": {
            "key": "/mgmt/tm/cm/device::items::{{HOSTNAME}}::location",
            "convertArrayToMap": { "keyName": "name" }
        },
        "description": {
            "key": "/mgmt/tm/cm/device::items::{{HOSTNAME}}::description",
            "convertArrayToMap": { "keyName": "name" }
        },
        "marketingName": {
            "key": "/mgmt/tm/cm/device::items::{{HOSTNAME}}::marketingName",
            "convertArrayToMap": { "keyName": "name" }
        },
        "platformId": {
            "key": "/mgmt/tm/cm/device::items::{{HOSTNAME}}::platformId",
            "convertArrayToMap": { "keyName": "name" }
        },
        "chassisId": {
            "key": "/mgmt/tm/cm/device::items::{{HOSTNAME}}::chassisId",
            "convertArrayToMap": { "keyName": "name" }
        },
        "baseMac": {
            "key": "/mgmt/tm/sys/hardware::sys/hardware/platform::sys/hardware/platform/0::baseMac"
        },
        "callBackUrl": {
            "key": "/mgmt/tm/sys/management-ip::items",
            "convertArrayToMap": { "keyName": "name" },
            "runFunction": { "name": "getFirstKey", "args": { "splitOnValue": "/", "keyPrefix": "https://" } }
        },
        "configReady": {
            "key": "/mgmt/tm/sys/ready::sys/ready/0::configReady"
        },
        "licenseReady": {
            "key": "/mgmt/tm/sys/ready::sys/ready/0::licenseReady"
        },
        "provisionReady": {
            "key": "/mgmt/tm/sys/ready::sys/ready/0::provisionReady"
        },
        "syncMode": {
            "key": "/mgmt/tm/cm/sync-status::cm/sync-status/0::mode"
        },
        "syncColor": {
            "key": "/mgmt/tm/cm/sync-status::cm/sync-status/0::color"
        },
        "syncStatus": {
            "key": "/mgmt/tm/cm/sync-status::cm/sync-status/0::status"
        },
        "syncSummary": {
            "key": "/mgmt/tm/cm/sync-status::cm/sync-status/0::summary"
        },
        "failoverStatus": {
            "key": "/mgmt/tm/cm/failover-status::cm/failover-status/0::status"
        },
        "failoverColor": {
            "key": "/mgmt/tm/cm/failover-status::cm/failover-status/0::color"
        },
        "deviceTimestamp": {
            "key": "/mgmt/tm/sys/clock::sys/clock/0::fullDate"
        },
        "cpu": {
            "key": "/mgmt/tm/sys/host-info::sys/host-info/0::sys/hostInfo/0/cpuInfo",
            "runFunction": { "name": "getAverage", "args": { "keyWithValue": "oneMinAvgSystem" } },
            "comment": "also oneMinAvgUser, need to determine how that should be factored in"
        },
        "memory": {
            "key": "/mgmt/tm/sys/memory::sys/memory/memory-host::sys/memory/memory-host/0",
            "runFunction": { "name": "getPercentFromKeys", "args": { "totalKey": "memoryTotal", "partialKey": "memoryUsed" } }
        },
        "tmmCpu": {
            "key": "/mgmt/tm/sys/tmm-info",
            "runFunction": { "name": "getAverage", "args": { "keyWithValue": "oneMinAvgUsageRatio" } }
        },
        "tmmMemory": {
            "key": "/mgmt/tm/sys/memory::sys/memory/memory-host::sys/memory/memory-host/0",
            "runFunction": { "name": "getPercentFromKeys", "args": { "totalKey": "tmmMemoryTotal", "partialKey": "tmmMemoryUsed" } }
        },
        "tmmTraffic": {
            "key": "/mgmt/tm/sys/tmm-traffic",
            "filterKeys": [ "/tmm-traffic", "clientSideTraffic.bitsIn", "clientSideTraffic.bitsOut" ],
            "renameKeys": { "sys/tmm-traffic": "([0-9]\\.[0-9])" },
            "comment": "bits, but over what time period?"
        },
        "diskStorage": {
            "key": "diskStorageRef::commandResult",
            "runFunction": { "name": "formatAsJson", "args": { "type": "csv", "mapKey": "Mounted", "filterKeys": [ "/", "Capacity", "1024-blocks" ] } }
        },
        "diskLatency": {
            "key": "diskLatencyRef::commandResult",
            "runFunction": { "name": "formatAsJson", "args": { "type": "csv", "mapKey": "Device:", "filterKeys": [ "sd", "dm", "rsec/s", "wsec/s" ] } }
        },
        "networkInterfaces": {
            "key": "/mgmt/tm/net/interface/stats",
            "filterKeys": [ "/stats", "counters.bitsIn", "counters.bitsOut", "status" ],
            "renameKeys": { "net/interface": "([0-9]\\.[0-9]|(?!\/)mgmt(?=\/))" }
        },
        "provisionState": {
            "key": "/mgmt/tm/sys/provision::items",
            "convertArrayToMap": { "keyName": "name", "keyNamePrefix": "name/" },
            "filterKeys": [ "name/", "level" ],
            "renameKeys": { "name/": { "pattern": "name\/(.*)", "group": 1 } }
        },
        "virtualServerStats": {
            "key": "/mgmt/tm/ltm/virtual/stats",
            "filterKeys": [ "/stats", "clientside.bitsIn", "clientside.bitsOut", "clientside.curConns", "availabilityState", "enabledState", "destination" ],
            "renameKeys": { "ltm/virtual": { "pattern": "virtual\/(.*)\/", "group": 1 } }
        },
        "poolStats": {
            "key": "/mgmt/tm/ltm/pool/stats",
            "filterKeys": [ "/stats", "serverside.bitsIn", "serverside.bitsOut", "serverside.curConns", "availabilityState", "statusReason", "enabledState" ],
            "renameKeys": { "ltm/pool/": { "pattern": "pool\/(.*)\/", "group": 1 } },
            "comment": "getting pool member stats requires call to uri pool/<pool>/members/stats, pool/members/stats only returns single pool"
        },
        "poolMemberStats": {
            "key": "poolMembersRef",
            "normalize": false
        },
        "tlsCerts": {
            "key": "/mgmt/tm/sys/file/ssl-cert::items",
            "convertArrayToMap": { "keyName": "name", "keyNamePrefix": "name/" },
            "filterKeys": [ "name/", "expirationDate", "expirationString", "subject", "issuer", "email" ],
            "renameKeys": { "name/": { "pattern": "name\/(.*)", "group": 1 } }
        }
    },
    "context": {
        "HOSTNAME": {
            "key": "/mgmt/tm/sys/global-settings::hostname"
        }
    }
}
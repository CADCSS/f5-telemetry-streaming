{
    "$id": "base_schema.json",
    "$async": true,
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Telemetry Streaming",
    "description": "",
    "type": "object",
    "definitions": {
        "secret": {
            "title": "Passphrase (secret)",
            "description": "" ,
            "type": "object",
            "properties": {
                "cipherText": {
                    "title": "Cipher Text: this contains a secret to encrypt",
                    "type": "string"
                },
                "environmentVar": {
                    "title": "Environment Variable: this will contain the named env var where the secret resides",
                    "type": "string"
                },
                "protected": {
                    "$comment": "Meta property primarily used to determine if 'cipherText' needs to be encrypted",
                    "title": "Protected",
                    "type": "string",
                    "enum": [ "plainText", "plainBase64", "SecureVault" ],
                    "default": "plainText"
                }
            },
            "oneOf": [
                { "required": [ "cipherText" ] },
                { "required": [ "environmentVar" ] }
            ],
            "f5secret": true
        },
        "tag": {
            "$comment": "Defaults do not get applied for $ref objects, so place defaults alongside instead.",
            "title": "Tag",
            "description": "" ,
            "type": "object",
            "properties": {
                "tenant": {
                    "title": "Tenant tag",
                    "type": "string"
                },
                "application": {
                    "title": "Application tag",
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "match": {
            "$comment": "Defaults do not get applied for $ref objects, so place defaults alongside instead.",
            "title": "Pattern to filter data",
            "description": "",
            "type": "string"
        }
    },
    "properties": {
       "class": {
            "title": "Class",
            "description": "Telemetry streaming top level class",
            "type": "string",
            "enum": [ "Telemetry" ]
       },
       "schemaVersion": {
            "title": "Schema version",
            "description": "Version of ADC Declaration schema this declaration uses",
            "type": "string",
            "$comment": "IMPORTANT: In enum array, please put current schema version first, oldest-supported version last.  Keep enum array sorted most-recent-first.",
            "enum": [ "0.9.0" ],
            "default": "0.9.0"
       },
       "$schema": {
            "title": "Schema",
            "description": "",
            "type": "string"
        }
    },
    "additionalProperties": {
        "$comment": "AJV does not resolve defaults inside oneOf/anyOf, so instead use allOf.  Any schema refs should also use allOf with an if/then/else on class",
        "properties": {
            "class": {
                "title": "Class",
                "type": "string",
                "enum": [
                    "Telemetry_System_Poller",
                    "Telemetry_Listener",
                    "Telemetry_Consumer"
                ]
            }
        },    
        "allOf": [
            {
                "$ref": "system_poller_schema.json#"
            },
            {
                "$ref": "listener_schema.json#"
            },
            {
                "$ref": "consumer_schema.json#"
            }
        ]
    },
    "required": [
        "class"
    ]
}